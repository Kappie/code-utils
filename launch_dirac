#!/usr/bin/env python

import argparse
import subprocess
import tempfile
import os
import numpy as np



parser = argparse.ArgumentParser()
parser.add_argument("--script", type=str)
parser.add_argument("--job_name", type=str)
parser.add_argument("script_args", type=str)

args = parser.parse_args()

working_dir = os.getcwd()
script = args.script
job_name = args.job_name
script_args = args.script_args

out_dir = os.environ.get("OUT_DIR")
out_file = os.path.join(out_dir, job_name + ".o")
err_file = os.path.join(out_dir, job_name + ".e")
script_full_path = os.path.join(working_dir, script)

launch_script = """export MD_DATA_DIR=/net/debye/kapteijns/Data/MD
export PATH="/net/debye/kapteijns/anaconda3/bin:$PATH"
export PYTHONPATH="${PYTHONPATH}:${HOME}/Code/code-utils"
python %s %s
""" % (script_full_path, script_args)

print(launch_script)
launch_file = "/tmp/%s_%.10f.pbs" % (job_name, np.random.rand())
with open(launch_file, "w") as f:
    f.write(launch_script)

#cmd = "qsub -o %s -e %s -l nodes=1:octocore %s" % (out_file, err_file, launch_file)
cmd = "qsub -o %s -e %s %s" % (out_file, err_file, launch_file)
print(cmd)
subprocess.run(cmd, shell=True)

os.remove(launch_file)



